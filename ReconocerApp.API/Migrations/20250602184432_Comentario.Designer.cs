// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReconocerApp.API.Data;

#nullable disable

namespace ReconocerApp.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250602184432_Comentario")]
    partial class Comentario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ReconocerApp.API.Models.CachedUserGraphInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProfilePhotoBase64")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CachedUserGraphInfos");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Colaborador", b =>
                {
                    b.Property<string>("ColaboradorId")
                        .HasColumnType("text");

                    b.Property<bool>("ExcepcionConfiguracion")
                        .HasColumnType("boolean");

                    b.Property<int>("OrganizacionId")
                        .HasColumnType("integer");

                    b.HasKey("ColaboradorId");

                    b.HasIndex("OrganizacionId");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Comportamiento", b =>
                {
                    b.Property<int>("ComportamientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ComportamientoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IconSvg")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrganizacionId")
                        .HasColumnType("integer");

                    b.Property<int>("WalletOtorgados")
                        .HasColumnType("integer");

                    b.HasKey("ComportamientoId");

                    b.HasIndex("OrganizacionId");

                    b.ToTable("Comportamientos");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.InventarioTransaccion", b =>
                {
                    b.Property<int>("TransaccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransaccionId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PremioId")
                        .HasColumnType("integer");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TransaccionId");

                    b.HasIndex("PremioId");

                    b.ToTable("InventarioTransacciones");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.MarketplaceCompra", b =>
                {
                    b.Property<int>("CompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CompraId"));

                    b.Property<string>("AprobadorId")
                        .HasColumnType("text");

                    b.Property<string>("Comentario")
                        .HasColumnType("text");

                    b.Property<string>("ComentarioRevision")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaCompra")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaResolucion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PremioId")
                        .HasColumnType("integer");

                    b.Property<string>("TokenColaborador")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CompraId");

                    b.HasIndex("PremioId");

                    b.ToTable("MarketplaceCompras");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.MarketplacePremio", b =>
                {
                    b.Property<int>("PremioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PremioId"));

                    b.Property<int>("CantidadActual")
                        .HasColumnType("integer");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<int>("CostoWallet")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagenPrincipal")
                        .HasColumnType("text");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrganizacionId")
                        .HasColumnType("integer");

                    b.Property<string>("UltimaActualizacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PremioId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("OrganizacionId");

                    b.ToTable("MarketplacePremios");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Organizacion", b =>
                {
                    b.Property<int>("OrganizacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrganizacionId"));

                    b.Property<bool>("Activa")
                        .HasColumnType("boolean");

                    b.Property<string>("ColorPrincipal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DominioEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrganizacionId");

                    b.ToTable("Organizaciones");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Reconocimiento", b =>
                {
                    b.Property<int>("ReconocimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReconocimientoId"));

                    b.Property<string>("AprobadorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ComentarioAprobacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaResolucion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Justificacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReconocedorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReconocidoId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ReconocimientoId");

                    b.ToTable("Reconocimientos");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.ReconocimientoComportamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ComportamientoId")
                        .HasColumnType("integer");

                    b.Property<int>("ReconocimientoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ComportamientoId");

                    b.HasIndex("ReconocimientoId");

                    b.ToTable("ReconocimientoComportamientos");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.WalletCategoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CategoriaId");

                    b.ToTable("WalletCategorias");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.WalletSaldo", b =>
                {
                    b.Property<int>("WalletSaldoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WalletSaldoId"));

                    b.Property<int>("SaldoActual")
                        .HasColumnType("integer");

                    b.Property<string>("TokenColaborador")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("WalletSaldoId");

                    b.ToTable("WalletSaldos");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.WalletTransaccion", b =>
                {
                    b.Property<int>("TransaccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransaccionId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TokenColaborador")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WalletSaldoId")
                        .HasColumnType("integer");

                    b.HasKey("TransaccionId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("WalletSaldoId");

                    b.ToTable("WalletTransacciones");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Colaborador", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.Organizacion", "Organizacion")
                        .WithMany("Colaboradores")
                        .HasForeignKey("OrganizacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Comportamiento", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.Organizacion", "Organizacion")
                        .WithMany("Comportamientos")
                        .HasForeignKey("OrganizacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.InventarioTransaccion", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.MarketplacePremio", "Premio")
                        .WithMany("InventarioTransacciones")
                        .HasForeignKey("PremioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Premio");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.MarketplaceCompra", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.MarketplacePremio", "Premio")
                        .WithMany("Compras")
                        .HasForeignKey("PremioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Premio");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.MarketplacePremio", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReconocerApp.API.Models.Organizacion", "Organizacion")
                        .WithMany("Premios")
                        .HasForeignKey("OrganizacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.ReconocimientoComportamiento", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.Comportamiento", "Comportamiento")
                        .WithMany("ReconocimientoComportamientos")
                        .HasForeignKey("ComportamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReconocerApp.API.Models.Reconocimiento", "Reconocimiento")
                        .WithMany("ReconocimientoComportamientos")
                        .HasForeignKey("ReconocimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comportamiento");

                    b.Navigation("Reconocimiento");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.WalletTransaccion", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.WalletCategoria", "Categoria")
                        .WithMany("Transacciones")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReconocerApp.API.Models.WalletSaldo", "WalletSaldo")
                        .WithMany("Transacciones")
                        .HasForeignKey("WalletSaldoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("WalletSaldo");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Comportamiento", b =>
                {
                    b.Navigation("ReconocimientoComportamientos");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.MarketplacePremio", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("InventarioTransacciones");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Organizacion", b =>
                {
                    b.Navigation("Colaboradores");

                    b.Navigation("Comportamientos");

                    b.Navigation("Premios");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Reconocimiento", b =>
                {
                    b.Navigation("ReconocimientoComportamientos");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.WalletCategoria", b =>
                {
                    b.Navigation("Transacciones");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.WalletSaldo", b =>
                {
                    b.Navigation("Transacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
